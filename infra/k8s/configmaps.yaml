# PostgreSQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: digital-identity
data:
  postgresql.conf: |
    # Connection Settings
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    
    # Memory Settings
    shared_buffers = 256MB
    effective_cache_size = 1GB
    work_mem = 4MB
    maintenance_work_mem = 64MB
    
    # WAL Settings
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB
    checkpoint_completion_target = 0.7
    
    # Logging
    logging_collector = on
    log_directory = '/var/log/postgresql'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_statement = 'all'
    log_min_duration_statement = 1000
    
    # Performance
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
  init-db.sql: |
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
    CREATE DATABASE mlflow;
    GRANT ALL PRIVILEGES ON DATABASE mlflow TO "user";
---
# Redis ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: digital-identity
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    
    # General
    timeout 0
    tcp-keepalive 300
    
    # Memory Management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec
    
    # Security
    protected-mode yes
    
    # Logging
    loglevel notice
    logfile ""
---
# Nginx ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: digital-identity
data:
  nginx.conf: |
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50M;
        
        # Gzip Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/geo+json
            application/javascript
            application/x-javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rdf+xml
            application/rss+xml
            application/xhtml+xml
            application/xml
            font/eot
            font/otf
            font/ttf
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=web:10m rate=5r/s;
        
        # SSL Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        include /etc/nginx/conf.d/*.conf;
    }
  
  api.conf: |
    upstream api_backend {
        least_conn;
        server go-gateway-service:8080 max_fails=3 fail_timeout=30s;
    }
    
    upstream rust_backend {
        least_conn;
        server rust-core-service:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream connectors_backend {
        least_conn;
        server kotlin-connectors-service:8080 max_fails=3 fail_timeout=30s;
    }
    
    upstream fraud_backend {
        least_conn;
        server python-fraud-service:8000 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name api.digital-identity.gov.uk;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name api.digital-identity.gov.uk;
        
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        
        # API Rate Limiting
        limit_req zone=api burst=20 nodelay;
        
        # Health Check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API Gateway
        location /api/v1/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Rust Core Service
        location /core/ {
            proxy_pass http://rust_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Government Connectors
        location /connectors/ {
            proxy_pass http://connectors_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Fraud Detection
        location /fraud/ {
            proxy_pass http://fraud_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
  
  portal.conf: |
    upstream citizen_portal {
        least_conn;
        server nextjs-citizen-service:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream admin_portal {
        least_conn;
        server nextjs-admin-service:3000 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name portal.digital-identity.gov.uk;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name portal.digital-identity.gov.uk;
        
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        
        # Web Rate Limiting
        limit_req zone=web burst=10 nodelay;
        
        location / {
            proxy_pass http://citizen_portal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    server {
        listen 80;
        server_name admin.digital-identity.gov.uk;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name admin.digital-identity.gov.uk;
        
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        
        location / {
            proxy_pass http://admin_portal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: digital-identity-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'digital-identity-prod'
        region: 'uk-south-1'
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'rust-core'
        static_configs:
          - targets: ['rust-core-service.digital-identity.svc.cluster.local:9090']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'go-services'
        static_configs:
          - targets: 
            - 'go-gateway-service.digital-identity.svc.cluster.local:8080'
            - 'go-auth-service.digital-identity.svc.cluster.local:8080'
            - 'go-verification-service.digital-identity.svc.cluster.local:8080'
            - 'go-registration-service.digital-identity.svc.cluster.local:8080'
            - 'go-audit-service.digital-identity.svc.cluster.local:8080'
        metrics_path: '/metrics'
        scrape_interval: 15s
      
      - job_name: 'kotlin-connectors'
        static_configs:
          - targets: ['kotlin-connectors-service.digital-identity.svc.cluster.local:8080']
        metrics_path: '/actuator/prometheus'
        scrape_interval: 15s
      
      - job_name: 'python-fraud'
        static_configs:
          - targets: ['python-fraud-service.digital-identity.svc.cluster.local:9091']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-service.digital-identity.svc.cluster.local:9187']
        metrics_path: '/metrics'
      
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-service.digital-identity.svc.cluster.local:9121']
        metrics_path: '/metrics'
      
      - job_name: 'nginx'
        static_configs:
          - targets: ['nginx-service.digital-identity.svc.cluster.local:9113']
        metrics_path: '/metrics'
      
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):10250'
            target_label: __address__
            replacement: '${1}:9100'
---
# Grafana ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: digital-identity-monitoring
data:
  grafana.ini: |
    [analytics]
    reporting_enabled = false
    check_for_updates = true
    
    [security]
    admin_user = admin
    admin_password = ${GRAFANA_PASSWORD}
    secret_key = ${GRAFANA_SECRET_KEY}
    disable_gravatar = false
    
    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    
    [auth.anonymous]
    enabled = false
    
    [log]
    mode = console
    level = info
    
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning